<module>
	<header>
		<title/>
		<dependencies>
			<import>flua.Core</import>
			<import>flua.FileSystem</import>
			<import>flua.Utils.Benchmark</import>
			<import>flua.Concurrency</import>
			<import>AST</import>
		</dependencies>
		<strings>
			<string id="flua_string_0">module</string>
			<string id="flua_string_1">header</string>
			<string id="flua_string_2">code</string>
			<string id="flua_string_3">unknown</string>
		</strings>
	</header>
	<code>
		<comment>\SConverts\Sa\Sreadable\Scode\Sto\San\SAbstract\SSyntax\STree</comment>
		<function>
			<name>codeToAST</name>
			<parameters>
				<parameter>text</parameter>
			</parameters>
			<code>
				<comment>\SDivide\Swork\Son\SX\Scores</comment>
				<assign>
					<value>lines</value>
					<value>
						<new>
							<type>
								<template-call>
									<value>Vector</value>
									<value>String</value>
								</template-call>
							</type>
							<parameters/>
						</new>
					</value>
				</assign>
				<comment>\STODO:\Slines\S=\Stext.lines</comment>
				<foreach>
					<iterator>line</iterator>
					<collection>
						<access>
							<value>text</value>
							<value>lines</value>
						</access>
					</collection>
					<code>
						<call>
							<function>
								<access>
									<value>lines</value>
									<value>add</value>
								</access>
							</function>
							<parameters>
								<parameter>line</parameter>
							</parameters>
						</call>
					</code>
				</foreach>
				<assign>
					<value>result</value>
					<value>
						<new>
							<type>
								<template-call>
									<value>Vector</value>
									<value>ASTNode</value>
								</template-call>
							</type>
							<parameters>
								<parameter>
									<access>
										<value>lines</value>
										<value>length</value>
									</access>
								</parameter>
							</parameters>
						</new>
					</value>
				</assign>
				<assign>
					<value>
						<access>
							<value>result</value>
							<value>length</value>
						</access>
					</value>
					<value>
						<access>
							<value>lines</value>
							<value>length</value>
						</access>
					</value>
				</assign>
				<assign>
					<value>cpuCount</value>
					<value>
						<call>
							<function>getCPUCount</function>
							<parameters/>
						</call>
					</value>
				</assign>
				<assign>
					<value>linesPerCPU</value>
					<value>
						<divide>
							<value>
								<access>
									<value>lines</value>
									<value>length</value>
								</access>
							</value>
							<value>cpuCount</value>
						</divide>
					</value>
				</assign>
				<comment>\SDo\Sit!</comment>
				<parallel-for>
					<iterator>i</iterator>
					<from>0</from>
					<to>
						<subtract>
							<value>cpuCount</value>
							<value>1</value>
						</subtract>
					</to>
					<code>
						<call>
							<function>processLines</function>
							<parameters>
								<parameter>lines</parameter>
								<parameter>result</parameter>
								<parameter>
									<multiply>
										<value>i</value>
										<value>linesPerCPU</value>
									</multiply>
								</parameter>
								<parameter>
									<subtract>
										<value>
											<multiply>
												<value>
													<add>
														<value>i</value>
														<value>1</value>
													</add>
												</value>
												<value>linesPerCPU</value>
											</multiply>
										</value>
										<value>1</value>
									</subtract>
								</parameter>
							</parameters>
						</call>
					</code>
				</parallel-for>
				<foreach>
					<iterator>line</iterator>
					<collection>result</collection>
					<code>
						<call>
							<function>print</function>
							<parameters>
								<parameter>
									<call>
										<function>
											<access>
												<value>line</value>
												<value>toXML</value>
											</access>
										</function>
										<parameters/>
									</call>
								</parameter>
							</parameters>
						</call>
					</code>
				</foreach>
				<comment>\SBasic\Snode\Sstructure</comment>
				<assign>
					<value>root</value>
					<value>
						<new>
							<type>ASTNode</type>
							<parameters>
								<parameter>flua_string_0</parameter>
							</parameters>
						</new>
					</value>
				</assign>
				<assign>
					<value>header</value>
					<value>
						<new>
							<type>ASTNode</type>
							<parameters>
								<parameter>flua_string_1</parameter>
								<parameter>root</parameter>
							</parameters>
						</new>
					</value>
				</assign>
				<assign>
					<value>code</value>
					<value>
						<new>
							<type>ASTNode</type>
							<parameters>
								<parameter>flua_string_2</parameter>
								<parameter>root</parameter>
							</parameters>
						</new>
					</value>
				</assign>
				<return>root</return>
			</code>
			<meta/>
		</function>
		<comment>\SProcesses\S#lines\Sfrom\S#indexStart\Sto\S#indexEnd\Sand\Ssaves\Sit\Sin\S#result</comment>
		<function>
			<name>processLines</name>
			<parameters>
				<parameter>lines</parameter>
				<parameter>result</parameter>
				<parameter>indexStart</parameter>
				<parameter>indexEnd</parameter>
			</parameters>
			<code>
				<for>
					<iterator>h</iterator>
					<from>indexStart</from>
					<to>indexEnd</to>
					<code>
						<assign>
							<value>
								<index>
									<value>result</value>
									<value>h</value>
								</index>
							</value>
							<value>
								<call>
									<function>processLine</function>
									<parameters>
										<parameter>
											<index>
												<value>lines</value>
												<value>h</value>
											</index>
										</parameter>
									</parameters>
								</call>
							</value>
						</assign>
					</code>
					<meta/>
				</for>
			</code>
			<meta/>
		</function>
		<comment>\SProcesses\Sa\Ssingle\S#line</comment>
		<function>
			<name>processLine</name>
			<parameters>
				<parameter>line</parameter>
			</parameters>
			<code>
				<return>
					<new>
						<type>ASTNode</type>
						<parameters>
							<parameter>flua_string_3</parameter>
							<parameter>null</parameter>
							<parameter>line</parameter>
						</parameters>
					</new>
				</return>
			</code>
			<meta/>
		</function>
	</code>
</module>
