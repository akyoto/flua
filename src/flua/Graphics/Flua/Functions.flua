<module>
	<header>
		<title/>
		<dependencies>
			<import>flua.Core</import>
			<import>public.Graphics.OpenGL</import>
			<import>public.Graphics.GLEW</import>
			<import>public.Graphics.GLU</import>
			<import>public.Graphics.GLUT</import>
			<import>public.Graphics.FreeImage</import>
			<import>public.Math.GLM</import>
			<import>flua.Math.Geometry</import>
			<import>flua.FileSystem</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<target>
			<name>C++</name>
			<code>
				<include>Functions.hpp</include>
			</code>
		</target>
		<extern>
			<namespace>
				<name>flua</name>
				<code>
					<extern-function>
						<name>createGLUTWindow</name>
						<type>Int</type>
						<meta/>
					</extern-function>
					<extern-function>
						<name>createShader</name>
						<type>GLuint</type>
					</extern-function>
					<extern-function>
						<name>createGLSLProgram</name>
						<type>GLuint</type>
					</extern-function>
					<extern-function>
						<name>createGLSLProgramAttribute</name>
						<type>GLint</type>
					</extern-function>
					<extern-function>
						<name>createGLSLProgramUniform</name>
						<type>GLint</type>
					</extern-function>
					<extern-function>
						<name>createBuffer</name>
						<type>GLuint</type>
					</extern-function>
					<extern-function>
						<name>loadTexture</name>
						<type>TextureInfo</type>
					</extern-function>
					<extern-function>
						<name>initGLUT</name>
					</extern-function>
					<extern-function>
						<name>printGLError</name>
					</extern-function>
					<extern-function>
						<name>setActiveProgram</name>
					</extern-function>
					<extern-function>
						<name>setTransform</name>
					</extern-function>
					<extern-function>
						<name>setCamera</name>
					</extern-function>
					<extern-function>
						<name>setVSync</name>
						<meta/>
					</extern-function>
					<extern-function>
						<name>set2DMode</name>
					</extern-function>
					<extern-function>
						<name>getLastGLError</name>
						<type>String</type>
						<meta/>
					</extern-function>
					<extern-function>
						<name>getMouseX</name>
						<type>Int</type>
						<meta>
							<no-side-effects>true</no-side-effects>
							<same-output-for-input>false</same-output-for-input>
						</meta>
					</extern-function>
					<extern-function>
						<name>getMouseY</name>
						<type>Int</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function>
						<name>getScreenWidth</name>
						<type>UInt</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function>
						<name>getScreenHeight</name>
						<type>UInt</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function>
						<name>isKeyDown</name>
						<type>Bool</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
				</code>
			</namespace>
			<class>
				<name>TextureInfo</name>
				<code>
					<public>
						<public-member>
							<declare-type>
								<value>handle</value>
								<value>GLuint</value>
							</declare-type>
						</public-member>
						<public-member>
							<declare-type>
								<value>width</value>
								<value>UInt</value>
							</declare-type>
						</public-member>
						<public-member>
							<declare-type>
								<value>height</value>
								<value>UInt</value>
							</declare-type>
						</public-member>
					</public>
					<function>
						<name>init</name>
						<code>
							<noop/>
						</code>
					</function>
				</code>
			</class>
		</extern>
		<comment>\SReturns\Sthe\Slast\SOpenGL\Serror\Sas\Sa\Sstring</comment>
		<function>
			<name>getLastGLError</name>
			<code>
				<return>
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>getLastGLError</value>
							</access>
						</function>
						<parameters/>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Sthe\S#x\Scoordinate\Sof\Sthe\Smouse\Spointer</comment>
		<comment>\Srelative\Sto\Sthe\Scurrent\Swindow.</comment>
		<function>
			<name>getMouseX</name>
			<code>
				<return>
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>getMouseX</value>
							</access>
						</function>
						<parameters/>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Sthe\S#y\Scoordinate\Sof\Sthe\Smouse\Spointer</comment>
		<comment>\Srelative\Sto\Sthe\Scurrent\Swindow.</comment>
		<function>
			<name>getMouseY</name>
			<code>
				<return>
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>getMouseY</value>
							</access>
						</function>
						<parameters/>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Sthe\Swidth\Sof\Sthe\Sscreen</comment>
		<function>
			<name>getScreenWidth</name>
			<parameters>
				<parameter>
					<assign>
						<value>id</value>
						<value>
							<negative>
								<value>1</value>
							</negative>
						</value>
					</assign>
				</parameter>
			</parameters>
			<code>
				<return>
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>getScreenWidth</value>
							</access>
						</function>
						<parameters/>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Sthe\Sheight\Sof\Sthe\Sscreen</comment>
		<function>
			<name>getScreenHeight</name>
			<parameters>
				<parameter>
					<assign>
						<value>id</value>
						<value>
							<negative>
								<value>1</value>
							</negative>
						</value>
					</assign>
				</parameter>
			</parameters>
			<code>
				<return>
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>getScreenHeight</value>
							</access>
						</function>
						<parameters/>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Swidth\Sdivided\Sby\Sthe\Sheight\Sof\Sthe\Sscreen</comment>
		<function>
			<name>getScreenRatio</name>
			<parameters>
				<parameter>
					<assign>
						<value>id</value>
						<value>
							<negative>
								<value>1</value>
							</negative>
						</value>
					</assign>
				</parameter>
			</parameters>
			<code>
				<return>
					<divide>
						<value>
							<call>
								<function>getScreenWidth</function>
								<parameters>
									<parameter>id</parameter>
								</parameters>
							</call>
						</value>
						<value>
							<call>
								<function>getScreenHeight</function>
								<parameters>
									<parameter>id</parameter>
								</parameters>
							</call>
						</value>
					</divide>
				</return>
			</code>
		</function>
		<comment>\SSets\Swhether\SVSync\Sshould\Sbe\Senabled\Sor\Snot</comment>
		<function>
			<name>setVSync</name>
			<parameters>
				<parameter>enabled</parameter>
			</parameters>
			<code>
				<call>
					<function>
						<access>
							<value>flua</value>
							<value>setVSync</value>
						</access>
					</function>
					<parameters>
						<parameter>enabled</parameter>
					</parameters>
				</call>
			</code>
			<meta/>
		</function>
		<comment>\SActivates\Sor\Sdeactivates\S2D\Sprojection</comment>
		<function>
			<name>set2DMode</name>
			<parameters>
				<parameter>enabled</parameter>
			</parameters>
			<code>
				<call>
					<function>
						<access>
							<value>flua</value>
							<value>set2DMode</value>
						</access>
					</function>
					<parameters>
						<parameter>enabled</parameter>
					</parameters>
				</call>
			</code>
			<meta/>
		</function>
		<comment>\SReturns\Strue\Sif\Sthe\Sgiven\S#key\Sis\Sbeing\Spressed,\Sfalse\Sotherwise</comment>
		<function>
			<name>isKeyDown</name>
			<parameters>
				<parameter>
					<declare-type>
						<value>key</value>
						<value>Key</value>
					</declare-type>
				</parameter>
			</parameters>
			<code>
				<return>
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>isKeyDown</value>
							</access>
						</function>
						<parameters>
							<parameter>key</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<comment>\SToggles\Sfullscreen\Smode</comment>
		<function>
			<name>toggleFullScreen</name>
			<code>
				<call>
					<function>glutFullScreenToggle</function>
					<parameters/>
				</call>
			</code>
		</function>
		<comment>\SReturns\Swhether\Sthe\Scurrent\Swindows\Sis\Sin\Sfullscreen\Smode</comment>
		<function>
			<name>isFullScreen</name>
			<code>
				<return>
					<call>
						<function>glutGet</function>
						<parameters>
							<parameter>GLUT_FULL_SCREEN</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
	</code>
</module>
