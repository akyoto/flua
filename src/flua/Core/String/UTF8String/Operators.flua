<module>
	<header>
		<title/>
		<dependencies>
			<import>flua.Core</import>
			<import>flua.Core.String</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<comment>\SUTF8String\Soperators</comment>
		<class>
			<name>UTF8String</name>
			<code>
				<operators>
					<operator>
						<name>+</name>
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<code>
							<return>
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>stri</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
					<operator>
						<name>+</name>
						<parameters>
							<parameter>
								<declare-type>
									<value>s1</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
							<parameter>
								<declare-type>
									<value>s2</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<code>
							<return>
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>s1</parameter>
										<parameter>s2</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
					<operator>
						<name>+</name>
						<parameters>
							<parameter>
								<declare-type>
									<value>s1</value>
									<value>Int</value>
								</declare-type>
							</parameter>
							<parameter>
								<declare-type>
									<value>s2</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<code>
							<return>
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>s1</parameter>
										<parameter>s2</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
					<operator>
						<name>+</name>
						<parameters>
							<parameter>
								<declare-type>
									<value>s1</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
							<parameter>
								<declare-type>
									<value>s2</value>
									<value>Int</value>
								</declare-type>
							</parameter>
						</parameters>
						<code>
							<return>
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>s1</parameter>
										<parameter>s2</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
					<operator>
						<name>+</name>
						<parameters>
							<parameter>
								<declare-type>
									<value>s1</value>
									<value>Int</value>
								</declare-type>
							</parameter>
							<parameter>
								<declare-type>
									<value>s2</value>
									<value>Int</value>
								</declare-type>
							</parameter>
						</parameters>
						<code>
							<return>
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>s1</parameter>
										<parameter>s2</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
					<operator>
						<name>+</name>
						<parameters>
							<parameter>
								<declare-type>
									<value>chars</value>
									<value>
										<unmanaged>
											<value>
												<template-call>
													<value>MemPointer</value>
													<value>Byte</value>
												</template-call>
											</value>
										</unmanaged>
									</value>
								</declare-type>
							</parameter>
						</parameters>
						<code>
							<return>
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>chars</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
					<operator>
						<name>+</name>
						<parameters>
							<parameter>
								<declare-type>
									<value>num</value>
									<value>Int</value>
								</declare-type>
							</parameter>
						</parameters>
						<code>
							<return>
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>num</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
					<operator>
						<name>*</name>
						<parameters>
							<parameter>
								<declare-type>
									<value>num</value>
									<value>Int</value>
								</declare-type>
							</parameter>
						</parameters>
						<code>
							<if-block>
								<if>
									<condition>
										<less-or-equal>
											<value>num</value>
											<value>0</value>
										</less-or-equal>
									</condition>
									<code>
										<return>EMPTY_STRING</return>
									</code>
								</if>
							</if-block>
							<assign>
								<value>mem</value>
								<value>
									<new>
										<type>
											<template-call>
												<value>MemPointer</value>
												<value>Byte</value>
											</template-call>
										</type>
										<parameters>
											<parameter>
												<multiply>
													<value>
														<access>
															<value>my</value>
															<value>lengthInBytes</value>
														</access>
													</value>
													<value>num</value>
												</multiply>
											</parameter>
										</parameters>
									</new>
								</value>
							</assign>
							<if-block>
								<if>
									<condition>
										<equal>
											<value>
												<access>
													<value>my</value>
													<value>lengthInBytes</value>
												</access>
											</value>
											<value>1</value>
										</equal>
									</condition>
									<code>
										<call>
											<function>setMem</function>
											<parameters>
												<parameter>mem</parameter>
												<parameter>
													<access>
														<value>
															<access>
																<value>my</value>
																<value>data</value>
															</access>
														</value>
														<value>data</value>
													</access>
												</parameter>
												<parameter>num</parameter>
											</parameters>
										</call>
									</code>
								</if>
								<else>
									<code>
										<for>
											<iterator>i</iterator>
											<from>0</from>
											<until>num</until>
											<code>
												<call>
													<function>copyMem</function>
													<parameters>
														<parameter>
															<access>
																<value>my</value>
																<value>data</value>
															</access>
														</parameter>
														<parameter>
															<add>
																<value>mem</value>
																<value>
																	<multiply>
																		<value>i</value>
																		<value>
																			<access>
																				<value>my</value>
																				<value>lengthInBytes</value>
																			</access>
																		</value>
																	</multiply>
																</value>
															</add>
														</parameter>
														<parameter>
															<access>
																<value>my</value>
																<value>lengthInBytes</value>
															</access>
														</parameter>
													</parameters>
												</call>
											</code>
										</for>
									</code>
								</else>
							</if-block>
							<return>
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>mem</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
					<operator>
						<name>[]</name>
						<parameters>
							<parameter>index</parameter>
						</parameters>
						<code>
							<return>
								<call>
									<function>
										<access>
											<value>my</value>
											<value>mid</value>
										</access>
									</function>
									<parameters>
										<parameter>index</parameter>
										<parameter>1</parameter>
									</parameters>
								</call>
							</return>
						</code>
					</operator>
					<operator>
						<name>[:]</name>
						<parameters>
							<parameter>from</parameter>
						</parameters>
						<code>
							<return>
								<call>
									<function>
										<access>
											<value>my</value>
											<value>substr</value>
										</access>
									</function>
									<parameters>
										<parameter>from</parameter>
										<parameter>
											<access>
												<value>my</value>
												<value>length</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</return>
						</code>
					</operator>
					<operator>
						<name>[:]</name>
						<parameters>
							<parameter>from</parameter>
							<parameter>to</parameter>
						</parameters>
						<code>
							<return>
								<call>
									<function>
										<access>
											<value>my</value>
											<value>substr</value>
										</access>
									</function>
									<parameters>
										<parameter>from</parameter>
										<parameter>to</parameter>
									</parameters>
								</call>
							</return>
						</code>
					</operator>
					<operator>
						<name>==</name>
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<code>
							<if-block>
								<if>
									<condition>
										<not-equal>
											<value>
												<access>
													<value>my</value>
													<value>length</value>
												</access>
											</value>
											<value>
												<access>
													<value>stri</value>
													<value>length</value>
												</access>
											</value>
										</not-equal>
									</condition>
									<code>
										<return>false</return>
									</code>
								</if>
							</if-block>
							<if-block>
								<if>
									<condition>
										<equal>
											<value>
												<access>
													<value>my</value>
													<value>data</value>
												</access>
											</value>
											<value>
												<access>
													<value>stri</value>
													<value>data</value>
												</access>
											</value>
										</equal>
									</condition>
									<code>
										<return>true</return>
									</code>
								</if>
							</if-block>
							<return>
								<call>
									<function>compareMem</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</parameter>
										<parameter>
											<access>
												<value>stri</value>
												<value>data</value>
											</access>
										</parameter>
										<parameter>
											<access>
												<value>my</value>
												<value>length</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</return>
						</code>
					</operator>
					<operator>
						<name>!=</name>
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<code>
							<if-block>
								<if>
									<condition>
										<not-equal>
											<value>
												<access>
													<value>my</value>
													<value>length</value>
												</access>
											</value>
											<value>
												<access>
													<value>stri</value>
													<value>length</value>
												</access>
											</value>
										</not-equal>
									</condition>
									<code>
										<return>true</return>
									</code>
								</if>
							</if-block>
							<if-block>
								<if>
									<condition>
										<equal>
											<value>
												<access>
													<value>my</value>
													<value>data</value>
												</access>
											</value>
											<value>
												<access>
													<value>stri</value>
													<value>data</value>
												</access>
											</value>
										</equal>
									</condition>
									<code>
										<return>false</return>
									</code>
								</if>
							</if-block>
							<return>
								<not>
									<value>
										<call>
											<function>compareMem</function>
											<parameters>
												<parameter>
													<access>
														<value>my</value>
														<value>data</value>
													</access>
												</parameter>
												<parameter>
													<access>
														<value>stri</value>
														<value>data</value>
													</access>
												</parameter>
												<parameter>
													<access>
														<value>my</value>
														<value>length</value>
													</access>
												</parameter>
											</parameters>
										</call>
									</value>
								</not>
							</return>
						</code>
					</operator>
				</operators>
			</code>
			<meta/>
		</class>
	</code>
</module>
