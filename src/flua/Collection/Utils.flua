<module>
	<header>
		<title/>
		<dependencies>
			<import>flua.Core</import>
		</dependencies>
		<strings>
			<string id="flua_string_0">\E</string>
		</strings>
	</header>
	<code>
		<comment>\STODO:\SImplement\Sthis\Sonce\SFunction\Spointers\Swork.</comment>
		<function>
			<name>map</name>
			<code>
				<noop/>
			</code>
			<meta/>
		</function>
		<comment>\STODO:\SImplement\Sthis\Sonce\SFunction\Spointers\Swork.</comment>
		<function>
			<name>reduce</name>
			<code>
				<noop/>
			</code>
			<meta/>
		</function>
		<comment>\STODO:\SImplement\Sthis</comment>
		<function>
			<name>merge</name>
			<parameters>
				<parameter>a</parameter>
				<parameter>b</parameter>
			</parameters>
			<code>
				<noop/>
			</code>
			<meta/>
		</function>
		<comment>\STODO:\SImplement\Sthis</comment>
		<function>
			<name>bsearch</name>
			<code>
				<noop/>
			</code>
			<meta/>
		</function>
		<comment>\SJoins\Smultiple\Sstrings\Sin\Sa\Svector\Sto\Sa\Ssingle\Sone</comment>
		<function>
			<name>join</name>
			<parameters>
				<parameter>
					<declare-type>
						<value>vec</value>
						<value>
							<template-call>
								<value>Vector</value>
								<value>String</value>
							</template-call>
						</value>
					</declare-type>
				</parameter>
			</parameters>
			<code>
				<assign>
					<value>result</value>
					<value>flua_string_0</value>
				</assign>
				<foreach>
					<iterator>x</iterator>
					<collection>vec</collection>
					<code>
						<assign-add>
							<value>result</value>
							<value>x</value>
						</assign-add>
					</code>
				</foreach>
				<return>result</return>
			</code>
			<meta/>
		</function>
		<comment>\SRecursive\SQuickSort</comment>
		<function>
			<name>quickSort</name>
			<parameters>
				<parameter>vec</parameter>
				<parameter>from</parameter>
				<parameter>to</parameter>
			</parameters>
			<code>
				<assign>
					<value>pivot</value>
					<value>
						<index>
							<value>vec</value>
							<value>
								<divide>
									<value>
										<add>
											<value>from</value>
											<value>to</value>
										</add>
									</value>
									<value>2</value>
								</divide>
							</value>
						</index>
					</value>
				</assign>
				<assign>
					<value>i</value>
					<value>from</value>
				</assign>
				<assign>
					<value>j</value>
					<value>to</value>
				</assign>
				<while>
					<condition>
						<less-or-equal>
							<value>i</value>
							<value>j</value>
						</less-or-equal>
					</condition>
					<code>
						<while>
							<condition>
								<less>
									<value>
										<index>
											<value>vec</value>
											<value>i</value>
										</index>
									</value>
									<value>pivot</value>
								</less>
							</condition>
							<code>
								<assign-add>
									<value>i</value>
									<value>1</value>
								</assign-add>
							</code>
						</while>
						<while>
							<condition>
								<greater>
									<value>
										<index>
											<value>vec</value>
											<value>j</value>
										</index>
									</value>
									<value>pivot</value>
								</greater>
							</condition>
							<code>
								<assign-subtract>
									<value>j</value>
									<value>1</value>
								</assign-subtract>
							</code>
						</while>
						<if-block>
							<if>
								<condition>
									<less-or-equal>
										<value>i</value>
										<value>j</value>
									</less-or-equal>
								</condition>
								<code>
									<comment>\STODO:\SReplace\Swith\Sswap</comment>
									<assign>
										<value>tmp</value>
										<value>
											<index>
												<value>vec</value>
												<value>i</value>
											</index>
										</value>
									</assign>
									<assign>
										<value>
											<index>
												<value>vec</value>
												<value>i</value>
											</index>
										</value>
										<value>
											<index>
												<value>vec</value>
												<value>j</value>
											</index>
										</value>
									</assign>
									<assign>
										<value>
											<index>
												<value>vec</value>
												<value>j</value>
											</index>
										</value>
										<value>tmp</value>
									</assign>
									<assign-add>
										<value>i</value>
										<value>1</value>
									</assign-add>
									<assign-subtract>
										<value>j</value>
										<value>1</value>
									</assign-subtract>
								</code>
							</if>
						</if-block>
					</code>
				</while>
				<if-block>
					<if>
						<condition>
							<less>
								<value>from</value>
								<value>j</value>
							</less>
						</condition>
						<code>
							<call>
								<function>quickSort</function>
								<parameters>
									<parameter>vec</parameter>
									<parameter>from</parameter>
									<parameter>j</parameter>
								</parameters>
							</call>
						</code>
					</if>
				</if-block>
				<if-block>
					<if>
						<condition>
							<less>
								<value>j</value>
								<value>to</value>
							</less>
						</condition>
						<code>
							<call>
								<function>quickSort</function>
								<parameters>
									<parameter>vec</parameter>
									<parameter>i</parameter>
									<parameter>to</parameter>
								</parameters>
							</call>
						</code>
					</if>
				</if-block>
			</code>
		</function>
	</code>
</module>
