<module>
	<header>
		<title/>
		<dependencies>
			<import>flua.Core</import>
			<import>flua.Collection.List</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<class depth="0" id="3">
			<name>MutableQueue</name>
			<code>
				<template depth="1" id="4">
					<parameter depth="2" id="5">TDataType</parameter>
				</template>
				<comment>\SInitializes\Sa\Squeue</comment>
				<function depth="1" id="8">
					<name>init</name>
					<code>
						<assign depth="2" id="9">
							<value>
								<access>
									<value>my</value>
									<value>list</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>List</value>
											<value>TDataType</value>
										</template-call>
									</type>
									<parameters/>
								</new>
							</value>
						</assign>
					</code>
					<meta/>
				</function>
				<comment>\SAdds\Sthe\Selement\S#x\Sto\Sthe\Squeue</comment>
				<function depth="1" id="12">
					<name>add</name>
					<parameters>
						<parameter>x</parameter>
					</parameters>
					<code>
						<call depth="2" id="13">
							<function>
								<access>
									<value>
										<access>
											<value>my</value>
											<value>list</value>
										</access>
									</value>
									<value>add</value>
								</access>
							</function>
							<parameters>
								<parameter>x</parameter>
							</parameters>
						</call>
					</code>
					<meta/>
				</function>
				<comment>\SRemoves\Sthe\Soldest\Selement\Sfrom\Sthe\Squeue\Sand\Sreturns\Sit\S(FIFO)</comment>
				<function depth="1" id="16">
					<name>takeFirst</name>
					<code>
						<return depth="2" id="17">
							<call>
								<function>
									<access>
										<value>
											<access>
												<value>my</value>
												<value>list</value>
											</access>
										</value>
										<value>takeFirst</value>
									</access>
								</function>
								<parameters/>
							</call>
						</return>
					</code>
					<meta/>
				</function>
				<comment>\SReturns\Strue\Sif\Sthe\Squeue\Shas\Sat\Sleast\Sone\Selement</comment>
				<function depth="1" id="20">
					<name>hasElements</name>
					<code>
						<return depth="2" id="21">
							<call>
								<function>
									<access>
										<value>
											<access>
												<value>my</value>
												<value>list</value>
											</access>
										</value>
										<value>hasElements</value>
									</access>
								</function>
								<parameters/>
							</call>
						</return>
					</code>
					<meta/>
				</function>
				<iterators depth="1" id="23">
					<iterator-type depth="2" id="24">
						<name>default</name>
						<code>
							<foreach depth="3" id="25">
								<iterator>element</iterator>
								<collection>
									<access>
										<value>my</value>
										<value>list</value>
									</access>
								</collection>
								<code>
									<yield depth="4" id="26">element</yield>
								</code>
							</foreach>
						</code>
					</iterator-type>
					<iterator-type depth="2" id="28">
						<name>takeAll</name>
						<code>
							<while depth="3" id="29">
								<condition>
									<call>
										<function>
											<access>
												<value>my</value>
												<value>hasElements</value>
											</access>
										</function>
										<parameters/>
									</call>
								</condition>
								<code>
									<yield depth="4" id="30">
										<call>
											<function>
												<access>
													<value>my</value>
													<value>takeFirst</value>
												</access>
											</function>
											<parameters/>
										</call>
									</yield>
								</code>
							</while>
						</code>
					</iterator-type>
				</iterators>
			</code>
			<meta>
				<default-class-version>true</default-class-version>
			</meta>
		</class>
		<comment>\SUsage\Sexample</comment>
		<test depth="0" id="33">
			<code>
				<assign depth="1" id="34">
					<value>q</value>
					<value>
						<new>
							<type>
								<template-call>
									<value>Queue</value>
									<value>Int</value>
								</template-call>
							</type>
							<parameters/>
						</new>
					</value>
				</assign>
				<on depth="1" id="36">
					<expression>q</expression>
					<code>
						<call depth="2" id="37">
							<function>add</function>
							<parameters>
								<parameter>1</parameter>
							</parameters>
						</call>
						<call depth="2" id="38">
							<function>add</function>
							<parameters>
								<parameter>2</parameter>
							</parameters>
						</call>
						<call depth="2" id="39">
							<function>add</function>
							<parameters>
								<parameter>3</parameter>
							</parameters>
						</call>
					</code>
				</on>
				<foreach depth="1" id="41">
					<iterator>x</iterator>
					<collection>q</collection>
					<code>
						<call depth="2" id="42">
							<function>print</function>
							<parameters>
								<parameter>x</parameter>
							</parameters>
						</call>
					</code>
				</foreach>
			</code>
		</test>
	</code>
</module>
